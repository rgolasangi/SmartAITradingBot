# Google Cloud Build Configuration for AI Trading Agent
steps:
  # Build Backend Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/ai-trading-backend:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/ai-trading-backend:latest'
      - '-f'
      - 'ai_trading_agent/Dockerfile'
      - './ai_trading_agent'
    id: 'build-backend'

  # Build Frontend Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/ai-trading-frontend:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/ai-trading-frontend:latest'
      - '-f'
      - 'ai-trading-dashboard/Dockerfile'
      - './ai-trading-dashboard'
    id: 'build-frontend'

  # Push Backend Image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/ai-trading-backend:$BUILD_ID'
    id: 'push-backend'
    waitFor: ['build-backend']

  # Push Frontend Image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/ai-trading-frontend:$BUILD_ID'
    id: 'push-frontend'
    waitFor: ['build-frontend']

  # Push Latest Tags
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/ai-trading-backend:latest'
    waitFor: ['push-backend']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/ai-trading-frontend:latest'
    waitFor: ['push-frontend']

  # Deploy to GKE - Update Backend Deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/ai-trading-backend'
      - 'ai-trading-backend=gcr.io/$PROJECT_ID/ai-trading-backend:$BUILD_ID'
      - '--namespace=ai-trading'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'  # Replace with your zone
      - 'CLOUDSDK_CONTAINER_CLUSTER=ai-trading-cluster'  # Replace with your cluster name
    id: 'deploy-backend'
    waitFor: ['push-backend']

  # Deploy to GKE - Update Frontend Deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/ai-trading-frontend'
      - 'ai-trading-frontend=gcr.io/$PROJECT_ID/ai-trading-frontend:$BUILD_ID'
      - '--namespace=ai-trading'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'  # Replace with your zone
      - 'CLOUDSDK_CONTAINER_CLUSTER=ai-trading-cluster'  # Replace with your cluster name
    id: 'deploy-frontend'
    waitFor: ['push-frontend']

  # Verify Deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'rollout'
      - 'status'
      - 'deployment/ai-trading-backend'
      - '--namespace=ai-trading'
      - '--timeout=300s'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=ai-trading-cluster'
    waitFor: ['deploy-backend']

  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'rollout'
      - 'status'
      - 'deployment/ai-trading-frontend'
      - '--namespace=ai-trading'
      - '--timeout=300s'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=ai-trading-cluster'
    waitFor: ['deploy-frontend']

  # Run Health Checks
  - name: 'gcr.io/cloud-builders/curl'
    args:
      - '-f'
      - 'http://ai-trading-backend-service.ai-trading.svc.cluster.local:5000/health'
    id: 'health-check-backend'
    waitFor: ['deploy-backend']

# Build Options
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY

# Timeout
timeout: '1200s'

# Substitutions for environment-specific values
substitutions:
  _CLUSTER_NAME: 'ai-trading-cluster'
  _CLUSTER_ZONE: 'us-central1-a'
  _NAMESPACE: 'ai-trading'

# Images to be pushed to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/ai-trading-backend:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/ai-trading-backend:latest'
  - 'gcr.io/$PROJECT_ID/ai-trading-frontend:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/ai-trading-frontend:latest'

